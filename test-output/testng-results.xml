<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-20T05:25:23Z" name="Suite" finished-at="2025-01-20T05:32:25Z" duration-ms="422184">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.AssignmentsSubmissionRunner@648c94da]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.DeletePortfolioCourseRunner@6c0d9d86]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner@535779e4]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.MultiScoringPortfolioCourseRuner@53de625d]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.MultiScoringSubmissionRuner@53fd0d10]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.PortfolioCenterCourseRunner@5e4bd84a]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.ScoreSubmissionRunner@2a62b5bc]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-01-20T05:25:23Z" name="Test3" finished-at="2025-01-20T05:32:25Z" duration-ms="422184">
      <class name="PortfolioCenterRunner.MultiScoringSubmissionRuner">
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.MultiScoringSubmissionRuner@53fd0d10]" started-at="2025-01-20T11:00:46Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T11:01:37Z" duration-ms="51325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the Multi Scoring Portfolio Center Score Submission at Admin side"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Multi Scoring Portfolio Center Score Submission at Admin side"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.MultiScoringSubmissionRuner@53fd0d10]" started-at="2025-01-20T11:00:46Z" name="setUpClass" finished-at="2025-01-20T11:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringSubmissionRuner@53fd0d10]" started-at="2025-01-20T11:00:46Z" name="beforeClass" finished-at="2025-01-20T11:00:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringSubmissionRuner@53fd0d10]" started-at="2025-01-20T11:01:37Z" name="afterClass" finished-at="2025-01-20T11:01:37Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringSubmissionRuner@53fd0d10]" started-at="2025-01-20T11:01:37Z" name="tearDownClass" finished-at="2025-01-20T11:01:39Z" duration-ms="1382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- PortfolioCenterRunner.MultiScoringSubmissionRuner -->
      <class name="PortfolioCenterRunner.PortfolioCenterCourseRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.PortfolioCenterCourseRunner@5e4bd84a]" started-at="2025-01-20T10:55:23Z" name="setUpClass" finished-at="2025-01-20T10:55:24Z" duration-ms="898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.PortfolioCenterCourseRunner@5e4bd84a]" started-at="2025-01-20T10:55:24Z" name="beforeClass" finished-at="2025-01-20T10:55:24Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.PortfolioCenterCourseRunner@5e4bd84a]" started-at="2025-01-20T10:55:24Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T10:56:37Z" duration-ms="72875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verifying the Portfolio Course Creation Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Portfolio Center Course Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.PortfolioCenterCourseRunner@5e4bd84a]" started-at="2025-01-20T10:56:37Z" name="tearDownClass" finished-at="2025-01-20T10:56:39Z" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.PortfolioCenterCourseRunner@5e4bd84a]" started-at="2025-01-20T10:56:37Z" name="afterClass" finished-at="2025-01-20T10:56:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- PortfolioCenterRunner.PortfolioCenterCourseRunner -->
      <class name="PortfolioCenterRunner.MultiScoringPortfolioCourseRuner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.MultiScoringPortfolioCourseRuner@53de625d]" started-at="2025-01-20T10:58:09Z" name="setUpClass" finished-at="2025-01-20T10:58:09Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.MultiScoringPortfolioCourseRuner@53de625d]" started-at="2025-01-20T10:58:09Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T11:00:01Z" duration-ms="111599" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verifying the Multi Scoring Portfolio Center Course Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Multi Scoring Portfolio Center Course Functionality"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //span[normalize-space(text())='Save']' (tried for 30 second(s) with 1000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //span[normalize-space(text())='Save']' (tried for 30 second(s) with 1000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:265)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
	at com.Utils.Wait.elementToBeClickable(Wait.java:29)
	at com.Utils.CommonPages.Save(CommonPages.java:91)
	at com.PortfolioCenter.pages.PortfolioCenterCoursePages.the_user_clicks_on_the_save_button(PortfolioCenterCoursePages.java:353)
	at PortfolioCenterStepdef.PortfolioCenterCourseStepdef.the_user_clicks_on_the_save_button(PortfolioCenterCourseStepdef.java:59)
	at ✽.the user clicks on the Save button(file:///D:/Focalpoint%20Automation/FPK12AutomationProject/src/test/resources/PortfolioCenterFeatures/MultiScoringPortfolioCourse.feature:15)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[normalize-space(text())='Save']"}
  (Session info: chrome=131.0.6778.265)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '22.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9afd8300822803fd51bedde41ee36ad4, findElement {using=xpath, value=//span[normalize-space(text())='Save']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.265, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\Users\GOPIPA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62632}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62632/devtoo..., se:cdpVersion: 131.0.6778.265, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9afd8300822803fd51bedde41ee36ad4
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at jdk.proxy2/jdk.proxy2.$Proxy29.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
	at com.Utils.Wait.elementToBeClickable(Wait.java:29)
	at com.Utils.CommonPages.Save(CommonPages.java:91)
	at com.PortfolioCenter.pages.PortfolioCenterCoursePages.the_user_clicks_on_the_save_button(PortfolioCenterCoursePages.java:353)
	at PortfolioCenterStepdef.PortfolioCenterCourseStepdef.the_user_clicks_on_the_save_button(PortfolioCenterCourseStepdef.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
	at io.cucumber.java.Invoker.invoke(Invoker.java:24)
	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
	at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:56)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
	at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringPortfolioCourseRuner@53de625d]" started-at="2025-01-20T10:58:09Z" name="beforeClass" finished-at="2025-01-20T10:58:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringPortfolioCourseRuner@53de625d]" started-at="2025-01-20T11:00:01Z" name="tearDownClass" finished-at="2025-01-20T11:00:03Z" duration-ms="1689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringPortfolioCourseRuner@53de625d]" started-at="2025-01-20T11:00:01Z" name="afterClass" finished-at="2025-01-20T11:00:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- PortfolioCenterRunner.MultiScoringPortfolioCourseRuner -->
      <class name="PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner@535779e4]" started-at="2025-01-20T11:00:03Z" name="setUpClass" finished-at="2025-01-20T11:00:03Z" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner@535779e4]" started-at="2025-01-20T11:00:03Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T11:00:44Z" duration-ms="41516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verifying the Multi Scoring Portfolio Center Assignment Submission Functionality At student side"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Multi Scoring Portfolio Center Assignment Submission Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner@535779e4]" started-at="2025-01-20T11:00:03Z" name="beforeClass" finished-at="2025-01-20T11:00:03Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner@535779e4]" started-at="2025-01-20T11:00:44Z" name="afterClass" finished-at="2025-01-20T11:00:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner@535779e4]" started-at="2025-01-20T11:00:44Z" name="tearDownClass" finished-at="2025-01-20T11:00:46Z" duration-ms="1704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- PortfolioCenterRunner.MultiScoringAssignmentSubmissionRunner -->
      <class name="PortfolioCenterRunner.AssignmentsSubmissionRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.AssignmentsSubmissionRunner@648c94da]" started-at="2025-01-20T10:56:39Z" name="setUpClass" finished-at="2025-01-20T10:56:39Z" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.AssignmentsSubmissionRunner@648c94da]" started-at="2025-01-20T10:56:39Z" name="beforeClass" finished-at="2025-01-20T10:56:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.AssignmentsSubmissionRunner@648c94da]" started-at="2025-01-20T10:56:39Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T10:57:22Z" duration-ms="43367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verifying the Assignment Submission Functionality At student side"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Assignment Submission Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.AssignmentsSubmissionRunner@648c94da]" started-at="2025-01-20T10:57:22Z" name="afterClass" finished-at="2025-01-20T10:57:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.AssignmentsSubmissionRunner@648c94da]" started-at="2025-01-20T10:57:22Z" name="tearDownClass" finished-at="2025-01-20T10:57:24Z" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- PortfolioCenterRunner.AssignmentsSubmissionRunner -->
      <class name="PortfolioCenterRunner.ScoreSubmissionRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.ScoreSubmissionRunner@2a62b5bc]" started-at="2025-01-20T10:57:24Z" name="setUpClass" finished-at="2025-01-20T10:57:24Z" duration-ms="32" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.ScoreSubmissionRunner@2a62b5bc]" started-at="2025-01-20T10:57:24Z" name="beforeClass" finished-at="2025-01-20T10:57:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.ScoreSubmissionRunner@2a62b5bc]" started-at="2025-01-20T10:57:24Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T10:58:08Z" duration-ms="43999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the Score Submission Functionality at Admin side"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the Score Submission Functionality at Admin side"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.ScoreSubmissionRunner@2a62b5bc]" started-at="2025-01-20T10:58:08Z" name="afterClass" finished-at="2025-01-20T10:58:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.ScoreSubmissionRunner@2a62b5bc]" started-at="2025-01-20T10:58:08Z" name="tearDownClass" finished-at="2025-01-20T10:58:09Z" duration-ms="1529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- PortfolioCenterRunner.ScoreSubmissionRunner -->
      <class name="PortfolioCenterRunner.DeletePortfolioCourseRunner">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:PortfolioCenterRunner.DeletePortfolioCourseRunner@6c0d9d86]" started-at="2025-01-20T11:01:39Z" name="beforeClass" finished-at="2025-01-20T11:01:39Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PortfolioCenterRunner.DeletePortfolioCourseRunner@6c0d9d86]" started-at="2025-01-20T11:01:39Z" name="setUpClass" finished-at="2025-01-20T11:01:39Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:PortfolioCenterRunner.DeletePortfolioCourseRunner@6c0d9d86]" started-at="2025-01-20T11:01:39Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-20T11:02:23Z" duration-ms="44539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verifying the Portfolio Course Creation Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Portfolio Center Course Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PortfolioCenterRunner.DeletePortfolioCourseRunner@6c0d9d86]" started-at="2025-01-20T11:02:23Z" name="tearDownClass" finished-at="2025-01-20T11:02:25Z" duration-ms="2321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:PortfolioCenterRunner.DeletePortfolioCourseRunner@6c0d9d86]" started-at="2025-01-20T11:02:23Z" name="afterClass" finished-at="2025-01-20T11:02:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- PortfolioCenterRunner.DeletePortfolioCourseRunner -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
